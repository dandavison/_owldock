MANAGE=.venv/bin/python manage.py

static-analysis: lint type-check

lint: lint-flake8

type-check: type-check-mypy

test:
	.venv/bin/pytest --pdb

test-all: lint type-check test

serve:
	$(MANAGE) runserver --settings=owldock.settings.dev 0.0.0.0:8000

lint-flake8:
	flake8 app owldock

type-check-mypy:
	.venv/bin/mypy .

type-check-pyright:
	pyright --venv-path . app owldock

repl-python:
	$(MANAGE) shell_plus --settings=owldock.settings.dev

create-fake-data:
	$(MANAGE) create_fake_data $$OWLDOCK_DEV_PASSWORD

create-fake-cases:
	$(MANAGE) create_fake_cases

generate-typescript-interfaces:
	$(MANAGE) generate_typescript_interfaces ../ui/src/autogenerated-interfaces.ts > /dev/null

recreate-db:
	rm -f db.sqlite3 \
	&& rm -rf app/migrations/* \
	&& ./manage.py makemigrations app \
	&& ./manage.py migrate \
	&& ./manage.py create_fake_data $$OWLDOCK_DEV_PASSWORD

db-graph:
	$(MANAGE) graph_models app --no-inheritance --exclude-models '*BaseModel' --output /tmp/db.svg

vscode:
	code .
